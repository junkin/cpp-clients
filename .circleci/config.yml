
version: 2.1
jobs:
  build and test:
    docker:
      - image: cimg/base:stable
    resource_class: large
    steps:
      - run:
          name: "Install build dependencies"
          command: "sudo apt-get --allow-releaseinfo-change update && sudo apt-get install -y wget libasound2-dev libopus-dev libopusfile-dev"
      - run:
          name: "Install bazel"
          command: "wget https://github.com/bazelbuild/bazelisk/releases/download/v1.11.0/bazelisk-linux-amd64 && sudo mv bazelisk-linux-amd64 /usr/local/bin/bazelisk && sudo chmod +x /usr/local/bin/bazelisk"
      - checkout
      - restore_cache:
          keys: 
            - v4-deps-{{ checksum "WORKSPACE" }}
      - run:
          name: "Build deps"
          command: "bazelisk build --config release @com_google_protobuf//:protoc @com_github_grpc_grpc//:grpc++"
      - run:
          name: "Build clients"
          command: "bazelisk build --stamp --config release //..."
      - save_cache:
          key: v4-deps-{{ checksum "WORKSPACE" }}
          paths:
            - bazel-bin
            - bazel-out
            - bazel-riva-clients
            - ~/.cache/bazel
      - run:
          name: "Test clients"
          command: "bazelisk test --config release //..."
      - run:
          name: "Collect artifacts"
          command: |
            mkdir /tmp/artifacts;
            cp bazel-bin/riva/clients/asr/riva_asr_client /tmp/artifacts/riva_asr_client-linux-amd64;
            cp bazel-bin/riva/clients/asr/riva_streaming_asr_client /tmp/artifacts/riva_streaming_asr_client-linux-amd64;
            cp bazel-bin/riva/clients/tts/riva_tts_client /tmp/artifacts/riva_tts_client-linux-amd64;
            cp bazel-bin/riva/clients/tts/riva_tts_perf_client /tmp/artifacts/riva_tts_perf_client-linux-amd64;
      - store_artifacts:
          path: /tmp/artifacts

workflows:
  build-workflow:
    jobs:
      - "build and test"
